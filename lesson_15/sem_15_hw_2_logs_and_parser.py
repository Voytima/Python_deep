"""
üìå –í–æ–∑—å–º–∏—Ç–µ –ª—é–±—ã–µ 1-3 –∑–∞–¥–∞—á–∏ –∏–∑ –ø—Ä–æ—à–ª—ã—Ö –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π.
   –î–æ–±–∞–≤—å—Ç–µ –∫ –Ω–∏–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ –∏ –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
   –¢–∞–∫–∂–µ —Ä–µ–∞–ª–∏–∑—É–π—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞ –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ —Å –ø–µ—Ä–µ–¥–∞—á–µ–π –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.
-----------------------------------------------------------------------------------------------------
üìå –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —É–¥–∞–ª—è–µ—Ç –∏–∑ —Ç–µ–∫—Å—Ç–∞ –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –∫—Ä–æ–º–µ –±—É–∫–≤ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞ –∏ –ø—Ä–æ–±–µ–ª–æ–≤.
üìå –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ.
"""
import argparse
from string import ascii_letters
import logging

FORMAT = '{levelname} - {asctime} - {funcName} - {msg}'
logging.basicConfig(filename="str_filter.log", encoding='utf-8', level=logging.INFO, style='{', format=FORMAT)
logger = logging.getLogger(__name__)


def text_filter(string: str) -> str:
    result = ''.join(c for c in string if c in set(ascii_letters + ' '))
    logger.info(f"Initial str: {string}, converted str: {result}")
    return result.lower()


def parser():
    parser = argparse.ArgumentParser(description="–£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –≤—Å–µ—Ö —Å–∏–º–≤–æ–ª–æ–≤ –∫—Ä–æ–º–µ –±—É–∫–≤ –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞ –∏ "
                                                 "–ø—Ä–æ–±–µ–ª–æ–≤")
    parser.add_argument('-s', '--string', default='It works!1!!11')
    args = parser.parse_args()
    return text_filter(args.string)


# print(text_filter("C'mon-c'mon, —Ç—É–¥—É–¥—É, be positive!11!1"))
print(parser())
