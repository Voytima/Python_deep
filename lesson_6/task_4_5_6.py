"""
üìå –°–æ–∑–¥–∞–π—Ç–µ –º–æ–¥—É–ª—å —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –≤–Ω—É—Ç—Ä–∏.
üìå –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –∑–∞–≥–∞–¥–∫—É, —Å–ø–∏—Å–æ–∫ —Å –≤–æ–∑–º–æ–∂–Ω—ã–º–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≥–∞–¥–æ–∫ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –Ω–∞ —É–≥–∞–¥—ã–≤–∞–Ω–∏–µ.
üìå –ü—Ä–æ–≥—Ä–∞–º–º–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–º–µ—Ä –ø–æ–ø—ã—Ç–∫–∏, —Å –∫–æ—Ç–æ—Ä–æ–π –±—ã–ª–∞ –æ—Ç–≥–∞–¥–∞–Ω–∞ –∑–∞–≥–∞–¥–∫–∞ –∏–ª–∏ –Ω–æ–ª—å, –µ—Å–ª–∏ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã.
***************************************************************************************************************
üìå –î–æ–±–∞–≤—å—Ç–µ –≤ –º–æ–¥—É–ª—å —Å –∑–∞–≥–∞–¥–∫–∞–º–∏ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Ö—Ä–∞–Ω–∏—Ç —Å–ª–æ–≤–∞—Ä—å —Å–ø–∏—Å–∫–æ–≤.
üìå –ö–ª—é—á —Å–ª–æ–≤–∞—Ä—è - –∑–∞–≥–∞–¥–∫–∞, –∑–Ω–∞—á–µ–Ω–∏–µ - —Å–ø–∏—Å–æ–∫ —Å –æ—Ç–≥–∞–¥–∫–∞–º–∏.
üìå –§—É–Ω–∫—Ü–∏—è –≤ —Ü–∏–∫–ª–µ –≤—ã–∑—ã–≤–∞–µ—Ç –∑–∞–≥–∞–¥—ã–≤–∞—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é, —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å –µ–π –≤—Å–µ —Å–≤–æ–∏ –∑–∞–≥–∞–¥–∫–∏.
***************************************************************************************************************
üìå –î–æ–±–∞–≤—å—Ç–µ –≤ –º–æ–¥—É–ª—å —Å –∑–∞–≥–∞–¥–∫–∞–º–∏ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Å—Ç—Ä–æ–∫—É (—Ç–µ–∫—Å—Ç –∑–∞–≥–∞–¥–∫–∏)
–∏ —á–∏—Å–ª–æ (–Ω–æ–º–µ—Ä –ø–æ–ø—ã—Ç–∫–∏, —Å –∫–æ—Ç–æ—Ä–æ–π –æ–Ω–∞ —É–≥–∞–¥–∞–Ω–∞).
üìå –§—É–Ω–∫—Ü–∏—è —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –æ—Ç–≥–∞–¥—ã–≤–∞–Ω–∏—è.
üìå –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∑–∞—â–∏—â—ë–Ω–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å —É—Ä–æ–≤–Ω—è –º–æ–¥—É–ª—è.
üìå –û—Ç–¥–µ–ª—å–Ω–æ –Ω–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —É–≥–∞–¥—ã–≤–∞–Ω–∏—è –∏–∑ –∑–∞—â–∏—â—ë–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è –≤ —É–¥–æ–±–Ω–æ–º –¥–ª—è —á—Ç–µ–Ω–∏—è
–≤–∏–¥–µ.
üìå –î–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ.
"""
__all__ = ['library', 'answer_printer']
_res = {}


def _answer_saver(question: str, count: int) -> dict:
    lst = [(question, count)]
    _res.update({k: v for k, v in lst})
    return _res


def _guess(question: str, answer: list[str], count: int):
    count_ = 0
    print(question)

    while True:
        count_ += 1
        choice = input('–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≥–∞–¥–∫—É: ').lower()

        if choice in (elem.lower() for elem in answer):
            _answer_saver(question, count_)
            return f'–í—ã —É–≥–∞–¥–∞–ª–∏ —Å {count_} –ø–æ–ø—ã—Ç–∫–∏'
        print(f'–ù–µ–≤–µ—Ä–Ω–æ. –û—Å—Ç–∞–ª–æ—Å—å {count - count_} –ø–æ–ø—ã—Ç–æ–∫')

        if count == count_:
            return f'–í—ã –Ω–µ —Å–º–æ–≥–ª–∏ –æ—Ç–≥–∞–¥–∞—Ç—å —Ç–µ–∫—É—â—É—é –∑–∞–≥–∞–¥–∫—É. –î–∞–≤–∞–π—Ç–µ –ø–µ—Ä–µ–π–¥–µ–º –∫ —Å–ª–µ–¥—É—é—â–µ–π!\n'


def library(func, count):
    data = {
        '–ë–µ–∑ –æ–∫–æ–Ω, –±–µ–∑ –¥–≤–µ—Ä–µ–π, –ø–æ–ª–Ω–∞ –≥–æ—Ä–Ω–∏—Ü–∞ –ª—é–¥–µ–π': ['–æ–≥—É—Ä–µ—Ü', '–∞—Ä–±—É–∑', '–ø–æ–º–∏–¥–æ—Ä'],
        '–ò –∑–∏–º–æ–π –∏ –ª–µ—Ç–æ–º –æ–¥–Ω–∏–º —Ü–≤–µ—Ç–æ–º': ['–µ–ª–∫–∞', '–µ–ª—å', '—ë–ª–∫–∞']
    }
    for key, item in data.items():
        print(func(key, item, count))
    return ""


def answer_printer(_res: dict) -> str:
    for k, v in _res.items():
        if v == 1:
            print(f"–ó–∞–≥–∞–¥–∫–∞ *{k}* –±—ã–ª–∞ –æ—Ç–≥–∞–¥–∞–Ω–∞ —Å {v} –ø–æ–ø—ã—Ç–∫–∏")
        else:
            print(f"–ó–∞–≥–∞–¥–∫–∞ *{k}* –±—ã–ª–∞ –æ—Ç–≥–∞–¥–∞–Ω–∞ —Å {v} –ø–æ–ø—ã—Ç–æ–∫")
    return ""


if __name__ == '__main__':
    print(library(_guess, 3))
    print(answer_printer(_res))
